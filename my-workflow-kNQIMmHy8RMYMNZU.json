{"createdAt":"2025-10-18T21:00:55.567Z","updatedAt":"2025-10-18T21:00:55.567Z","id":"kNQIMmHy8RMYMNZU","name":"My workflow","active":false,"isArchived":false,"nodes":[{"parameters":{},"type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[0,0],"id":"9e314470-2812-4cc2-98ba-be9852ca163c","name":"When clicking ‘Execute workflow’"},{"parameters":{"jsCode":"// Código para n8n: Obtener precio de Major (Telegram) usando APIs gratuitas\n// Fuentes: CoinMarketCap (público), CoinPaprika y Binance\n\nconst token = \"major\"; // Símbolo o slug de Major\nconst headers = { \"User-Agent\": \"Mozilla/5.0\" };\n\n// Función para obtener precio desde CoinMarketCap (endpoint público)\nasync function precioCMC(slug) {\n  const url = `https://api.coinmarketcap.com/data-api/v3/cryptocurrency/detail?slug=${slug}`;\n  try {\n    const response = await fetch(url, { headers });\n    if (!response.ok) return null;\n    const data = await response.json();\n    const price = data?.data?.statistics?.price;\n    return price ? Number(price) : null;\n  } catch (error) {\n    console.error(\"Error en CoinMarketCap:\", error);\n    return null;\n  }\n}\n\n// Función para buscar ID en CoinPaprika\nasync function buscarCoinPaprika(query) {\n  const url = `https://api.coinpaprika.com/v1/search?q=${encodeURIComponent(query)}&c=currencies`;\n  try {\n    const response = await fetch(url);\n    if (!response.ok) return null;\n    const data = await response.json();\n    const results = data.currencies || [];\n    if (results.length === 0) return null;\n    // Buscar coincidencia exacta con \"major\" o \"Major\"\n    const exact = results.find(\n      c => c.symbol?.toLowerCase() === query.toLowerCase() || \n           c.name?.toLowerCase() === query.toLowerCase()\n    );\n    return (exact || results[0]).id;\n  } catch (error) {\n    console.error(\"Error en búsqueda CoinPaprika:\", error);\n    return null;\n  }\n}\n\n// Función para obtener precio desde CoinPaprika\nasync function precioCoinPaprika(id) {\n  const url = `https://api.coinpaprika.com/v1/tickers/${id}`;\n  try {\n    const response = await fetch(url);\n    if (!response.ok) return null;\n    const data = await response.json();\n    const price = data?.quotes?.USD?.price;\n    return price ? Number(price) : null;\n  } catch (error) {\n    console.error(\"Error en CoinPaprika:\", error);\n    return null;\n  }\n}\n\n// Función para obtener precio desde Binance\nasync function precioBinance(symbol) {\n  const url = `https://api.binance.com/api/v3/ticker/price?symbol=${symbol.toUpperCase()}`;\n  try {\n    const response = await fetch(url);\n    if (!response.ok) return null;\n    const data = await response.json();\n    return data.price ? Number(data.price) : null;\n  } catch (error) {\n    console.error(\"Error en Binance:\", error);\n    return null;\n  }\n}\n\n// Función principal para obtener precio\nasync function obtenerPrecio(token) {\n  // 1) Intentar con CoinMarketCap (slug)\n  let price = await precioCMC(token);\n  if (price) return { fuente: \"CoinMarketCap (público)\", price };\n\n  // 2) Intentar con CoinPaprika (búsqueda por ID)\n  const id = await buscarCoinPaprika(token);\n  if (id) {\n    price = await precioCoinPaprika(id);\n    if (price) return { fuente: `CoinPaprika (${id})`, price };\n  }\n\n  // 3) Intentar con Binance (símbolo)\n  price = await precioBinance(token);\n  if (price) return { fuente: \"Binance\", price };\n\n  return null;\n}\n\n// Ejecutar para cada item de entrada en n8n\nfor (const item of $input.all()) {\n  const resultado = await obtenerPrecio(token);\n  \n  if (resultado) {\n    item.json.precioMajor = resultado.price;\n    item.json.fuente = resultado.fuente;\n    item.json.moneda = \"USD\";\n    item.json.timestamp = new Date().toISOString();\n  } else {\n    item.json.error = \"No se pudo obtener el precio de Major\";\n    item.json.fuentesIntentadas = [\"CoinMarketCap\", \"CoinPaprika\", \"Binance\"];\n  }\n}\n\nreturn $input.all();\n\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[208,0],"id":"1ab606ca-5e24-484f-896b-0fbb3dd5b8c8","name":"Code in JavaScript"}],"connections":{"When clicking ‘Execute workflow’":{"main":[[{"node":"Code in JavaScript","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"4bfea757-90b3-4bfb-9683-959ec2c36a8c","triggerCount":0,"shared":[{"createdAt":"2025-10-18T21:00:55.571Z","updatedAt":"2025-10-18T21:00:55.571Z","role":"workflow:owner","workflowId":"kNQIMmHy8RMYMNZU","projectId":"j0ScW9j43X1fRnX4"}],"tags":[]}